@model RibbonCustomizationDemoOptions
@{DemoHelper.Instance.ControlAreaMaxWidth = Unit.Percentage(100);}

@section StartDemoRegion {
    @{ Html.BeginForm(); }
}

@if(Model.RibbonMode == RichEditRibbonMode.ExternalRibbon) {
    @Html.Partial("RibbonCustomizationExternalRibbonPartial");
}
@Html.Partial("RibbonCustomizationPartial", Model)

@section DemoOptionsTop {
    <div class="options">
        <div class="options-item">
            @Html.DevExpress().ComboBox(s => {
                s.Name = "RibbonMode";
                s.Properties.Caption = "Ribbon Mode";
                s.Properties.Items.Add("Auto", "Auto");
                s.Properties.Items.Add("Ribbon");
                s.Properties.Items.Add("External Ribbon", "ExternalRibbon");
                s.Properties.Items.Add("One Line Ribbon", "OneLineRibbon");
                s.Properties.Items.Add("None", "None");
                s.Theme = DemoHelper.Instance.Theme;
                s.Properties.ClientSideEvents.ValueChanged = "function(s, e) { $('form').submit(); }";
                s.PreRender = (sender, e) => {
                    MVCxComboBox cmb = sender as MVCxComboBox;
                    cmb.Value = Model.RibbonMode.ToString();
                };
           }).GetHtml()
        </div>
        <div class="options-item">
            @Html.DevExpress().CheckBox(s => {
                s.Name = "ShowStatusBar";
                s.Properties.Caption = "Show StatusBar";
                s.Checked = Model.ShowStatusBar;
                s.Theme = DemoHelper.Instance.Theme;
                s.Properties.ClientSideEvents.ValueChanged = "function(s, e) { $('form').submit(); }";
           }).GetHtml()
        </div>
    </div>
}
@section EndDemoRegion { 
    @{ Html.EndForm(); }
}